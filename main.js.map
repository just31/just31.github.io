{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZyC;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;ACT7B,kCAAkC,+BAA+B,6BAA6B,KAAK,oBAAoB,oBAAoB,qCAAqC,0BAA0B,mBAAmB,+BAA+B,KAAK,aAAa,mBAAmB,kBAAkB,KAAK,uBAAuB,gCAAgC,yBAAyB,yBAAyB,gCAAgC,wBAAwB,sBAAsB,oBAAoB,KAAK,eAAe,uBAAuB,wBAAwB,6BAA6B,mBAAmB,KAAK,uDAAuD,u4C;;;;;;;;;;;ACAlrB,gQ;;;;;;;;;;;;;;;;;ACAkD;AAKlD,wEAAwE;AASxE;IAEE;QAOA,OAAE,GAAQ,IAAI,CAAC;QACf,UAAK,GAAW,IAAI,CAAC;IANrB,CAAC;IAQD,oCAAoC;IACpC,+BAAQ,GAAR;QAEE,+CAA+C;QAC/C,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAExB,2DAA2D;QAC3D,CAAC,CAAC,SAAS,CAAC,mDAAmD,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEjF,0IAA0I;QAC1I;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAyJqB;QAErB,qCAAqC;QACrC,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;QAEpC,2GAA2G;QAC3G,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,IAAI,CAAC;YACrB,OAAO,EAAE,2BAA2B;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;SACnB,CAAC,CAAC;QAEH,mDAAmD;IACrD,CAAC;IAED,kHAAkH;IAC1G,sCAAe,GAAvB;QACE,OAAO;YACL,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,YAAY,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE;YAC9D,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,YAAY,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE;SAC/D,CAAC;IACJ,CAAC;IAED,iHAAiH;IACzG,2CAAoB,GAA5B;QACE,IAAI,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAEzC,IAAI,WAAW,GAAG;YAChB,IAAI,KAAK,GAAG,GAAG,CAAC;YAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBACxB,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;YACjD,OAAO,KAAK,CAAC;QACf,CAAC,CAAC;QAEF,UAAU,CAAC;YACT,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACrC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,GAAG,WAAW,EAAE,CAAC;aAC3C;QACH,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,2EAA2E;IAC3E,iCAAU,GAAV,UAAW,EAAE;QAEX,IAAI,KAAK,GAAG,IAAI,CAAC;QAEjB,kFAAkF;QAClF,CAAC,KAAK,CAAC,EAAE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;QAEhD,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,YAAY,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE7C,qIAAqI;QACrI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE;YACvC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,EAAE,EAAE,EAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,sCAAsC,CAAC,CAAC;SAC7H;QAED,mDAAmD;QACnD,UAAU,CAAC;YACT,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC,sGAAsG;QACnJ,CAAC,EAAE,IAAI,CAAC,CAAC;QAET,wCAAwC;QACxC,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAE9B,CAAC;IA/OU,YAAY;QARxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;YACnC,MAAM,EAAE,CAAC,QAAQ,CAAC;;SAEnB,CAAC;QAEF,8BAA8B;;;OACjB,YAAY,CAkPxB;IAAD,mBAAC;CAAA;AAlPwB;;;;;;;;;;;;;;;;;;;;;;ACdiC;AACjB;AAEe;AACT;AAE/C,wDAAwD;AACxD,sKAAsK;AACxH;AAc9C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;aACb;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;aACZ;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACtBtB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".map-container {\\r\\n  display: flex !important;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.map-forms {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  width: 345px;\\r\\n  margin: 10px 0 10px 12px;\\r\\n}\\r\\n\\r\\n#map{\\r\\n  height: 93vh;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\nbutton, input {\\r\\n  background-color: #cee2f2;\\r\\n  text-align: center;\\r\\n  border-radius: 5px;\\r\\n  border: 1px #000000 solid;\\r\\n  line-height: 15px;\\r\\n  cursor: pointer;\\r\\n  outline: none;\\r\\n}\\r\\n\\r\\ninput {\\r\\n  text-align: left;\\r\\n  padding-left: 5px;\\r\\n  border-radius: inherit;\\r\\n  cursor: auto;\\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSx3QkFBd0I7RUFDeEIsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLHdCQUF3QjtBQUMxQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixXQUFXO0FBQ2I7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLHNCQUFzQjtFQUN0QixZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXAtY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuLm1hcC1mb3JtcyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB3aWR0aDogMzQ1cHg7XHJcbiAgbWFyZ2luOiAxMHB4IDAgMTBweCAxMnB4O1xyXG59XHJcblxyXG4jbWFwe1xyXG4gIGhlaWdodDogOTN2aDtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuYnV0dG9uLCBpbnB1dCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2NlZTJmMjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJvcmRlcjogMXB4ICMwMDAwMDAgc29saWQ7XHJcbiAgbGluZS1oZWlnaHQ6IDE1cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuXHJcbmlucHV0IHtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIHBhZGRpbmctbGVmdDogNXB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IGluaGVyaXQ7XHJcbiAgY3Vyc29yOiBhdXRvO1xyXG59XHJcblxyXG4iXX0= */\"","module.exports = \"<div class=\\\"map-container\\\">\\n\\n  <div class=\\\"map-forms\\\">\\n    Количество <input type=\\\"text\\\" [(ngModel)]=\\\"count\\\" required> <button (click)=\\\"addMarkers($event)\\\">Заполнить</button>\\n  </div>\\n\\n  <div id=\\\"map\\\"></div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n// Объявляем Leaflet переменную, для того, чтобы можно было использовать Leaflet внутри компонента Angular.\ndeclare let L;\n\n// Декоратор для класса AppComponent. С объектом необходимых метаданных.\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  inputs: ['number'],\n  styleUrls: ['./app.component.css']\n})\n\n// Создаем класс AppComponent.\nexport class AppComponent implements OnInit {\n\n  constructor() {\n\n  }\n\n  // Создаем необходимые, для работы с картой, свойства класса.\n  map: any;\n  dropIcon: any;\n  fg: any = null;\n  count: number = null;\n\n  // Метод инициализирующий компонент.\n  ngOnInit() {\n\n    // Создаем новую карту, используя функционал L.\n    this.map = L.map(\"map\");\n\n    // Подгружаем тайлы для карты, с ресурса openstreetmap.org.\n    L.tileLayer(\"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\").addTo(this.map);\n\n    // Подгружаем векторные тайлы для карты, с ресурса cloud.maptiler.com. Используя ключ авторизации, для запросов. Настраиваем опции тайлов.\n    /*L.vectorGrid.protobuf(\"https://free-{s}.tilehosting.com/data/v3/{z}/{x}/{y}.pbf.pict?key={key}\", {\n      //rendererFactory: L.canvas.tile,\n      vectorTileLayerStyles: {\n        water: {\n          fill: true,\n          weight: 1,\n          fillColor: '#06cccc',\n          color: '#06cccc',\n          fillOpacity: 0.2,\n          opacity: 0.4,\n        },\n        admin: {\n          weight: 1,\n          fillColor: 'pink',\n          color: 'pink',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        waterway: {\n          weight: 1,\n          fillColor: '#2375e0',\n          color: '#2375e0',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        landcover: {\n          fill: true,\n          weight: 1,\n          fillColor: '#53e033',\n          color: '#53e033',\n          fillOpacity: 0.2,\n          opacity: 0.4,\n        },\n        landuse: {\n          fill: true,\n          weight: 1,\n          fillColor: '#e5b404',\n          color: '#e5b404',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        park: {\n          fill: true,\n          weight: 1,\n          fillColor: '#84ea5b',\n          color: '#84ea5b',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        boundary: {\n          weight: 1,\n          fillColor: '#c545d3',\n          color: '#c545d3',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        aeroway: {\n          weight: 1,\n          fillColor: '#51aeb5',\n          color: '#51aeb5',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        road: {\n          weight: 1,\n          fillColor: '#f2b648',\n          color: '#f2b648',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        tunnel: {\n          weight: 0.5,\n          fillColor: '#f2b648',\n          color: '#f2b648',\n          fillOpacity: 0.2,\n          opacity: 0.4,\n        },\n        bridge: {\n          weight: 0.5,\n          fillColor: '#f2b648',\n          color: '#f2b648',\n          fillOpacity: 0.2,\n          opacity: 0.4,\n        },\n        transportation: {\n          weight: 0.5,\n          fillColor: '#f2b648',\n          color: '#f2b648',\n          fillOpacity: 0.2,\n          opacity: 0.4,\n        },\n        transit: {\n          weight: 0.5,\n          fillColor: '#f2b648',\n          color: '#f2b648',\n          fillOpacity: 0.2,\n          opacity: 0.4,\n        },\n        building: {\n          fill: true,\n          weight: 1,\n          fillColor: '#2b2b2b',\n          color: '#2b2b2b',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        water_name: {\n          weight: 1,\n          fillColor: '#022c5b',\n          color: '#022c5b',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        transportation_name: {\n          weight: 1,\n          fillColor: '#bc6b38',\n          color: '#bc6b38',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        place: {\n          weight: 1,\n          fillColor: '#f20e93',\n          color: '#f20e93',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        housenumber: {\n          weight: 1,\n          fillColor: '#ef4c8b',\n          color: '#ef4c8b',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        poi: {\n          weight: 1,\n          fillColor: '#3bb50a',\n          color: '#3bb50a',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        },\n        earth: {\n          fill: true,\n          weight: 1,\n          fillColor: '#c0c0c0',\n          color: '#c0c0c0',\n          fillOpacity: 0.2,\n          opacity: 0.4\n        }\n      },\n      subdomains: \"0123\",\n      key: 'BuNi4FPIgsaSVnVlaLoQ',\n      maxNativeZoom: 8\n    }).addTo(this.map);*/\n\n    // Указываем координаты центра карты.\n    this.map.setView([48.85, 2.35], 11);\n\n    // Создаем пользовательскую иконочку, для маркера. В качестве источника, указываем путь до svg-изображения.\n    this.dropIcon = L.icon({\n      iconUrl: '../assets/images/drop.svg',\n      iconSize: [40, 40], //\n    });\n\n    //console.log(this.map.getBounds().toBBoxString());\n  }\n\n  // Метод создающий рандомные координаты маркеров. Метод приватный, т.к. используется только внутри данного класса.\n  private getRandomLatLng(): any {\n    return [\n      this.map.getBounds().getSouthWest().lat + 0.38 * Math.random(),\n      this.map.getBounds().getSouthWest().lng + 1.28 * Math.random()\n    ];\n  }\n\n  // Метод создающий рандомные фоны, для маркеров. Метод приватный, т.к. используется только внутри данного класса.\n  private randBackgroundMarker(): any {\n    let elems = document.querySelectorAll('img');\n    let chars = '0123456789ABCDEF'.split('');\n\n    let randomColor = function () {\n      let color = '#';\n      for (let i = 0; i < 6; i++)\n        color += chars[Math.floor(Math.random() * 16)];\n      return color;\n    };\n\n    setTimeout(function () {\n      for (var i = 0; i < elems.length; i++) {\n        elems[i].style.background = randomColor();\n      }\n    }, 1500);\n  }\n\n  // Метод добавляющий маркеры на карту, после нажатия на кнопку \"Заполнить\".\n  addMarkers(ev): void {\n\n    let _self = this;\n\n    // При каждом новом нажатии по кнопке, удаляем предыдущую группу маркеров с карты.\n    (_self.fg !== null) ? _self.fg.remove() : false;\n\n    _self.fg = L.featureGroup().addTo(_self.map);\n\n    // Заполняем созданную для маркеров группу, значениями со случайными координатами. Добавляем к маркерам всплывающие окошки с текстом.\n    for (let i = 0; i < _self.count; i += 1) {\n      L.marker(_self.getRandomLatLng(), {icon: _self.dropIcon}).addTo(_self.fg).bindPopup(\"<b>Hello world!</b><br>I am a popup.\");\n    }\n\n    // Добавляем все маркеры на карту, через 1 секунду.\n    setTimeout(function () {\n      _self.map.fitBounds(_self.fg.getBounds()); // Получаем границы группы маркеров 'fg.getBounds()' и масштабируем карту под них методом - fitBounds.\n    }, 1000);\n\n    // Добавляем случайные фоны, к маркерам.\n    this.randBackgroundMarker();\n\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n// Импортируем FormsModule из библиотеки @angular/forms.\n// Для того, чтобы можно было осуществить двухстороннее связывание через директиву [(ngModel)]. Между элементом формы и соответствующим свойством класса AppComponent.\nimport { FormsModule }  from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}